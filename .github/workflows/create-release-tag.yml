name: Create Release Tag

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version type"
        required: true
        type: choice
        options:
          - major
          - minor
          - patch
          - major-beta
          - major-rc
          - minor-beta
          - minor-rc
          - patch-beta
          - patch-rc

jobs:
  create-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version and create tag
        run: |
          VERSION_TYPE="${{ github.event.inputs.version_type }}"
          echo "üì¶ Version type: $VERSION_TYPE"

          # Î≤ÑÏ†Ñ ÌÉÄÏûÖÏóê Îî∞Îùº npm version Î™ÖÎ†πÏñ¥ Í≤∞Ï†ï
          case $VERSION_TYPE in
            major)
              npm version major --no-git-tag-version
              ;;
            minor)
              npm version minor --no-git-tag-version
              ;;
            patch)
              npm version patch --no-git-tag-version
              ;;
            major-beta)
              npm version major --preid=beta --no-git-tag-version
              ;;
            major-rc)
              npm version major --preid=rc --no-git-tag-version
              ;;
            minor-beta)
              npm version minor --preid=beta --no-git-tag-version
              ;;
            minor-rc)
              npm version minor --preid=rc --no-git-tag-version
              ;;
            patch-beta)
              npm version patch --preid=beta --no-git-tag-version
              ;;
            patch-rc)
              npm version patch --preid=rc --no-git-tag-version
              ;;
            *)
              echo "‚ùå Invalid version type: $VERSION_TYPE"
              exit 1
              ;;
          esac

          NEW_VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="v$NEW_VERSION"

          echo "üì¶ New version: $NEW_VERSION"
          echo "üè∑Ô∏è  Tag name: $TAG_NAME"

          # Git Ïª§Î∞ã Î∞è ÌÉúÍ∑∏ ÏÉùÏÑ±
          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION ($VERSION_TYPE release)"
          git tag $TAG_NAME

          # Ìë∏Ïãú
          git push origin HEAD
          git push origin $TAG_NAME

          echo "‚úÖ Successfully bumped $VERSION_TYPE version to $NEW_VERSION and created tag $TAG_NAME"

name: Create GitHub Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      pull-requests: read
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Extract tag information
        id: tag-info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Tag: ${TAG_NAME}, Version: ${VERSION}"

      - name: Check if release already exists
        id: check-existing-release
        run: |
          TAG_NAME="${{ steps.tag-info.outputs.tag_name }}"
          if ! git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "❌ Tag $TAG_NAME does not exist locally"
            exit 1
          fi
          if gh release view "$TAG_NAME" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract changelog for version
        if: steps.check-existing-release.outputs.exists == 'false'
        id: changelog
        run: |
          VERSION="${{ steps.tag-info.outputs.version }}"
          if [ ! -f "CHANGELOG.md" ]; then
            echo "changelog=No CHANGELOG.md found" >> $GITHUB_OUTPUT
            exit 0
          fi
          CHANGELOG_CONTENT=$(awk "
          /^## \[$VERSION\]/ {
            print_section = 1
            next
          }
          print_section && /^## \[/ && !/^## \[$VERSION\]/ {
            print_section = 0
          }
          print_section {
            if (!/^## \[$VERSION\]/) {
              print
            }
          }
          " CHANGELOG.md)
          if [ -z "$CHANGELOG_CONTENT" ]; then
            echo "changelog=No changelog found for version $VERSION" >> $GITHUB_OUTPUT
          else
            {
              echo "changelog<<EOF"
              echo "$CHANGELOG_CONTENT"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check-existing-release.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const tagName = '${{ steps.tag-info.outputs.tag_name }}';
            const version = '${{ steps.tag-info.outputs.version }}';
            const changelogContent = `${{ steps.changelog.outputs.changelog }}`;

            const releaseBody = `## Release ${version}

            ${changelogContent}

            ## Installation
            \`\`\`bash
            npm install hyoseong-publish@${version}
            \`\`\`

            ---
            *Full changelog: https://github.com/${{ github.repository }}/compare/HEAD...${tagName}*`;

            try {
              const response = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tagName,
                name: `Release ${tagName}`,
                body: releaseBody,
                draft: false,
                prerelease: false
              });
              console.log(`✅ GitHub Release created: ${response.data.html_url}`);
            } catch (error) {
              throw error;
            }

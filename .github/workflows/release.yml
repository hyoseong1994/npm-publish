name: Release & Publish

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.18

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build package
        run: |
          bun run prepare
          bun run build

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Publishing version: ${VERSION}"

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Setting up npm authentication..."

          if [ -z "${NODE_AUTH_TOKEN}" ]; then
            echo "❌ NPM_TOKEN is not set"
            exit 1
          fi

          echo "✅ NPM_TOKEN is set (length: ${#NODE_AUTH_TOKEN})"
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc

          echo "Checking package.json..."
          cat package.json | grep -E '"name"|"version"'

          echo "Checking if package already exists..."
          npm view hyoseong-publish version 2>/dev/null || echo "Package does not exist yet - first publish!"

          echo "Publishing to npm..."
          npm publish --access public --verbose

          echo "✅ Package published successfully!"

      - name: Mark npm publish success
        run: |
          echo "✅ npm publish completed successfully"
          echo "Tag ${{ steps.version.outputs.tag_name }} has been published to npm"
